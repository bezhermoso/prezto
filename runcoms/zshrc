# -*- mode: sh -*-
#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# Source Prezto.
# To customize prompt, run `p10k configure` or edit ~/.dotfiles/zsh/.p10k.zsh.

# Coerce 256-bit terminal colorspace
#export TERM='xterm-256color'

## Setup terminal colors first. I use base16-shell
BASE16_SHELL_PATH="$HOME/.dotfiles/base16-shell"
[ -n "$PS1" ] && \
  [ -s "$BASE16_SHELL_PATH/profile_helper.sh" ] && \
    source "$BASE16_SHELL_PATH/profile_helper.sh"

export BASE16_FLAVOR=${BASE16_FLAVOR:-"gruvbox-dark-hard"}
[ -z $BASE16_THEME ] && eval "base16_{$BASE16_FLAVOR}"
## WIP: Set some environment variables that Vim can read on startup
#export VIM_COLOR="base16-${BASE16_FLAVOR}"
#export BACKGROUND=${BACKGROUND:-"dark"}

#base16_$BASE16_FLAVOR
source $HOME/.dotfiles/zsh/colorscheme.zsh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.dotfiles/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Load Powerlevel10k configuration
[[ ! -f ~/.dotfiles/zsh/.p10k.zsh ]] || source ~/.dotfiles/zsh/.p10k.zsh

# Load optional $WORK configuration
work_config_entrypoint="${HOME}/.dotfiles/work-entrypoint.sh"
if [[ -f  $work_config_entrypoint ]]; then
  echo "Loading \$WORK configuration..."
  source $work_config_entrypoint
fi

if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#export ZPLUG_HOME=/usr/local/opt/zplug
#[ -f $ZPLUG_HOME/init.zsh ] && source $ZPLUG_HOME/init.zsh || :
##zplug 'unixorn/tumult.plugin.zsh'
#zplug 'Tarrasch/zsh-bd'
#zplug load

# Enable bash completion support (eg. tmuxp)
#autoload bashcompinit
#bashcompinit

# https://github.com/sharkdp/bat
if (( $+commands[bat] )); then
  alias cat="bat --paging=never"
fi

if (( $+commands[batman] )); then
  # DO NOT SET BAT_PAGER! It will cause infinite recursion.
  #export BAT_PAGER='less -R'
  alias man="batman"
fi

batdiff() {
    git diff --name-only --relative --diff-filter=d | xargs bat --diff
}

alias bathelp='bat --plain --language=help'
help() {
    "$@" --help 2>&1 | bathelp
}

# Will have to redefine $EDITOR because `tumult` might have overwritten it.
# export EDITOR=nvim

# Customize to your needs...

setopt NO_CLOBBER
#setopt AUTO_CD
setopt MULTIOS
setopt AUTO_PUSHD
setopt GLOB_COMPLETE
setopt PUSHD_MINUS
#setopt PUSHD_SILENT
setopt PUSHD_TO_HOME
setopt PUSHD_IGNORE_DUPS
setopt RM_STAR_WAIT
setopt INTERACTIVE_COMMENTS

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8,standout'


# Show trailing slash on directories on `ls`
alias ls="ls -GF"
#bindkey "^r" history-incremental-search-backward

autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround
bindkey -a cs change-surround
bindkey -a ds delete-surround
bindkey -a ys add-surround
bindkey -M visual S add-surround
KEYTIMEOUT=1


fpath=($HOME/.dotfiles/zsh/functions /usr/local/share/zsh-completions $fpath)

### ENVIRONMENT MANAGERS
# rbenv
if (( $+commands[rbenv] )); then
  eval "$(rbenv init -)"
fi

if (( $+commands[pyenv] )); then
  eval "$(pyenv init -)"
fi

if (( $+commands[pyenv-virtualenv] )); then
  eval "$(pyenv virtualenv-init -)"
fi

if (( $+commands[nodenv] )); then
  eval "$(nodenv init -)"
fi

# direnv
if (( $+commands[direnv] )); then
  eval "$(direnv hook zsh)"
fi

function src() {
  source $HOME/.dotfiles/zsh/.zprofile
}

export HISTINGORE='clear:history'
export HISTORYCONTROL='ignoreboth'

#if [[ -z "$TMUX_PANE" && -z "$EMACS" && -z "$SSH_TTY" ]]; then
#  base16_spacemacs
#fi

export ANSIBLE_NOCOWS=1

alias hacksh='$SHELL | tr -u eauiobBgGsSlL 34U1088995577'
alias reinit-markers='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -seed'

# Drupal Console
#source "$HOME/.console/console.rc" 2>/dev/null

export ANDROID_HOME=/usr/local/opt/android-sdk

alias mcs='emacsclient -t -a ""'
alias vim="nvim"
alias vi="vim"
alias quit=exit

alias ydl="youtube-dl"
nvimdiff="nvim -d"

#export GPG_TTY=$(tty)
#export PINENTRY_USER_DATA="USE_CURSES=1"

alias color-table="vim +XtermColorTable +only"

## FZF (Fuzzy Finder) CONFIGURATION
export GREP_COLOR='1;37;41'
export FZF_COMPLETION_TRIGGER='~~'
#export FZF_DEFAULT_COMMAND="ag --hidden --skip-vcs-ignores --ignore .git --ignore /keybase -f -g \"\""
export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden --follow --glob "!.git/*" --glob "!/keybase/*"'
export FZF_DEFAULT_OPTS=' --color=fg:7,bg:0,hl:1,bg+:18,fg+:5,hl+:1,info:8,prompt:5,pointer:2,marker:6,spinner:3,header:8
  --no-mouse --margin=0,0,0,1
  --prompt="â€º "
  --tabstop=2
  -1
  --preview="[[ -d {} ]] && tree -L 1 {} || bat --style=numbers --color=always --line-range=:500 {}"
'
export FZF_CTRL_R_OPTS='--preview=""'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# SHELL HISTORY WITH atuin: https://github.com/ellie/atuin
export ATUIN_CONFIG_DIR=$HOME/.dotfiles/atuin
if (( $+commands[atuin] )); then
  eval "$(atuin init zsh)"
fi
# Register *after* FZF so that atuin history widgets win


# Parent directory selection using `fzf`
function _parent_dirlist_fzf() {
    _parent_dirlist "$@" | fzf +s +m --preview 'ls -a {}'
}

function cd() {
  if (($# > 0 )); then
    builtin cd "$@"
  else
    if (( $+commands[fzf] )); then
      local _path=$(_parent_dirlist_fzf "$PWD")
    else
      local _path=$(_parent_dirlist_select "$PWD")
    fi
    [ -z $_path ] && return 129
    cd $_path
  fi
}

alias a='fasd -a'        # any
alias s='fasd -si'       # show / search / select
alias d='fasd -d'        # directory
alias f='fasd -f'        # file
alias sd='fasd -sid'     # interactive directory selection
alias sf='fasd -sif'     # interactive file selection
alias z='fasd_cd -d'     # cd, same functionality as j in autojump
alias zz='fasd_cd -d -i' # cd with interactive selection

# Explicitly run command in Rosetta mode (Apple Silicon)
alias rosetta="arch -x86_64"


start-copy-server() {
  while true; do nc -l 4737 | pbcopy; done 2>&1 &
}

# Inspired by:
# http://boredzo.org/blog/archives/2016-08-15/colorized-man-pages-understood-and-customized
#man() {
	#env \
		#LESS_TERMCAP_md=$'\e[1;36m' \
		#LESS_TERMCAP_me=$'\e[0m' \
		#LESS_TERMCAP_se=$'\e[0m' \
		#LESS_TERMCAP_so=$'\e[1;41;38;5;15m' \
		#LESS_TERMCAP_ue=$'\e[0m' \
		#LESS_TERMCAP_us=$'\e[1;32m' \
			#man "$@"
#}
# man colors
# export LESS_TERMCAP_md=$'\e[1;36m' \
#   LESS_TERMCAP_me=$'\e[0m' \
#   LESS_TERMCAP_se=$'\e[0m' \
#   LESS_TERMCAP_so=$'\e[1;41;38;5;15m' \
#   LESS_TERMCAP_ue=$'\e[0m' \
#   LESS_TERMCAP_us=$'\e[1;32m'

if (( $+commands[pygmentize] )); then
  export LESSOPEN="| pygmentize %s 2>/dev/null"
elif (( $+commands[highlight] )); then
  # `less` with syntax-highlighting using `source-highlight`
  # https://gist.github.com/textarcana/4611277
  #if (( $+commands[source-highlight] )); then
    #export LESSOPEN="| /usr/local/bin/src-hilite-lesspipe.sh %s"
    #export LESS=" -R "
    #alias less='less -m -N -g -i -J --underline-special --SILENT'
    #alias more='less'
  #fi
  #
  # `less` with syntax-highlighting using `highlight`
  # https://gist.github.com/textarcana/4611277#gistcomment-1701305
  export LESSOPEN="| $(which highlight) %s --out-format xterm256 --line-numbers --quiet --force --style base16-materia"
  # Use "highlight" in place of "cat"
  #alias cat="highlight $1 --out-format xterm256 --line-numbers --quiet --force --style base16"
fi

export LESS=" -R"
alias less='less -m -N -g -i -J --line-numbers --underline-special'
alias more='less'

function qapp() {
  echo "'quit app \"$@\"'" | xargs osascript -e
}

unalias gr
alias gr='jump-to-git-root'

function csview() {
  cat "$1" | column -s, -t | less -#5 -SN
}


# http://stackoverflow.com/a/10744524/908451
function git-show-orig {
    git status -su | grep -e"\.orig$" | cut -f2 -d" "
}

rifle() {
  /usr/local/opt/ranger/libexec/ranger/ext/rifle.py "$@"
}

#function nvm() {
  #if [[ -z $NVM_DIR ]]; then
    #export NVM_DIR="/Users/bez/.nvm"
    #source "$NVM_DIR/nvm.sh"
    #nvm $@
  #fi
#}

## TMUX CONFIGURATION
export TMUX_CONFIG_DIR="$HOME/.dotfiles/tmux"

function tmuxp() {
  local _command=$@
  if [[ $1 == 'load' ]]
  then
    _command="$_command --yes"
  fi

  eval "command tmuxp $_command"
}

compinit -U tmuxp

if [[ -n $TMUX_PANE ]] && [[ -n $PYENV_VERSION ]]; then
  PYENV_VERSION=
fi

mopidy-start() {
  PYENV_VERSION=system mopidy --config <(gpg --decrypt ~/.config/mopidy/mopidy.conf.gpg)
}

#function _reverse() {
  #local reversed=
  #for item in $@; do
    #reversed=($item $reversed)
  #done
  #echo $reversed
#}

# Parent directory selection using `select`
function _parent_dirlist_select() {
    OCOLUMNS="$COLUMNS"
    COLUMNS=1
    select dir in $(_parent_dirlist $1)
    do
      echo $dir
      return 0
    done
    COLUMNS="$OCOLUMNS"
}

function _parent_dirlist() {
  local _dir="$1"
  while [[ $_dir != '/' ]]; do
    _dir=$(dirname $_dir)
    echo $_dir
  done
}

export PYTHON_CONFIGURE_OPTS="--enable-framework CC=clang"

if [[ -f $HOME/.dotfiles/zsh/.zprezto/runcoms/weebly.zshrc ]]; then
  source $HOME/.dotfiles/zsh/.zprezto/runcoms/weebly.zshrc
fi

alias kb="kubectl"

# Load man page as PDF in Preview
# From: https://mjtsai.com/blog/2022/11/20/viewing-man-pages-on-ventura/
function manpdf() {
  mandoc -T pdf "$(/usr/bin/man -w $@)" | open -fa Preview
}

#export PROMPT_EOL_MARK='%K{8}%F{0}%%%f%k'
#
export PATH="${GOPATH}/bin:${PATH}"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc' ]; then . '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc' ]; then . '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'; fi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

work_config_entrypoint_post="${HOME}/.dotfiles/work-entrypoint.post.sh"
if [[ -f  $work_config_entrypoint_post ]]; then
  echo "Loading \$WORK post-configuration..."
  source $work_config_entrypoint_post
fi

if (( $+commands[yt-dlp] )); then
  alias youtube-dl="yt-dlp"
fi
